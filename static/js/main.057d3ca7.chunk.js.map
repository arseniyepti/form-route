{"version":3,"sources":["heplers/axiosInstance.js","actions/actions.js","heplers/yupValidation.js","components/Authorization.jsx","components/Main.jsx","components/Registration.jsx","components/App.js","reducers/reducers.js","index.js"],"names":["axiosInstance","axios","create","baseURL","validateStatus","status","fetchAuthorizationSuccess","createAction","fetchAuthorizationFailure","fetchAuthorizationFinally","fetchRegistrationSuccess","fetchRegistrationFailure","fetchRegistrationFinally","validationSchemaAuthForm","Yup","shape","password","required","email","validationSchemaRegForm","name","actionCreators","setAuthState","history","props","dispatch","a","post","user","response","data","token","username","localStorage","setItem","isLogged","emailOrPassword","errors","authorization","loading","actions","Authorization","this","initialValues","validationSchema","onSubmit","resetForm","push","values","touched","handleChange","setFieldTouched","handleSubmit","Section","StyledForm","Label","SymSpan","onPressEnter","onChange","event","value","id","type","component","StyledInput","visibilityToggle","StyledInputPassword","StyledButton","onClick","StyledLink","to","React","Component","ConnectedAuthorization","connect","state","authState","UIState","styled","section","Button","Input","Password","form","Link","span","label","Main","handleLogOut","accept","getItem","Wrapper","Name","ConnectedMain","h2","setRegState","registration","Registration","style","marginLeft","ConnectedRegistration","regState","App","exact","path","connectApp","handleActions","payload","combineReducers","GlobalStyle","createGlobalStyle","ext","window","__REDUX_DEVTOOLS_EXTENSION__","devtoolMiddleware","store","createStore","reducers","compose","applyMiddleware","thunk","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.057d3ca7.chunk.js","sourcesContent":["import axios from \"axios\";\n\nconst axiosInstance = axios.create({\n  baseURL: \"https://conduit.productionready.io/api\",\n  validateStatus: function (status) {\n    return status >= 200 && status < 300;\n  },\n});\nexport default axiosInstance;\n","import { createAction } from \"redux-actions\";\nimport axiosInstance from \"../heplers/axiosInstance.js\";\n\nexport const fetchAuthorizationSuccess = createAction(\"AUTH_FETCH_SUCCESS\");\nexport const fetchAuthorizationFailure = createAction(\"AUTH_FETCH_FAILURE\");\nexport const fetchAuthorizationFinally = createAction(\"AUTH_FETCH_FINALLY\");\nexport const fetchRegistrationSuccess = createAction(\"REG_FETCH_SUCCESS\");\nexport const fetchRegistrationFailure = createAction(\"REG_FETCH_FAILURE\");\nexport const fetchRegistrationFinally = createAction(\"REG_FETCH_FINALLY\");\n\nexport const setAuthState = (history, { ...props }) => async (dispatch) => {\n  const url = \"/users/login\";\n  try {\n    const response = await axiosInstance.post(url, {\n      user: { ...props },\n    });\n    const { token, username } = response.data.user;\n    localStorage.setItem(\"token\", token);\n    localStorage.setItem(\"username\", username);\n    dispatch(\n      fetchAuthorizationSuccess({\n        isLogged: true,\n      })\n    );\n    return true;\n  } catch (error) {\n    const emailOrPassword = error.response.data.errors[\"email or password\"];\n    dispatch(\n      fetchAuthorizationFailure({\n        emailOrPassword,\n        authorization: false,\n      })\n    );\n  } finally {\n    dispatch(\n      fetchAuthorizationFinally({\n        loading: false,\n      })\n    );\n  }\n};\n\nexport const setRegState = (username, email, password) => async (dispatch) => {\n  const url = \"/users\";\n  try {\n    await axiosInstance.post(url, {\n      user: {\n        username,\n        email,\n        password,\n      },\n    });\n    dispatch(\n      fetchRegistrationSuccess({\n        registration: true,\n      })\n    );\n    return true;\n  } catch (error) {\n    const { email, password, username } = error.response.data.errors;\n    dispatch(\n      fetchRegistrationFailure({\n        email,\n        password,\n        username,\n        registration: false,\n      })\n    );\n    return false;\n  } finally {\n    dispatch(\n      fetchRegistrationFinally({\n        loading: false,\n      })\n    );\n  }\n};\n","import * as Yup from \"yup\";\n\nconst validationSchemaAuthForm = Yup.object().shape({\n  password: Yup.string().required(\"Поле не заполнено\"),\n  email: Yup.string().required(\"Поле не заполнено\"),\n});\n\nconst validationSchemaRegForm = Yup.object().shape({\n  name: Yup.string().required(\"Поле не заполнено\"),\n  password: Yup.string().required(\"Поле не заполнено\"),\n  email: Yup.string().required(\"Поле не заполнено\"),\n});\n\nexport { validationSchemaRegForm, validationSchemaAuthForm };\n","import { Button, Input } from \"antd\";\nimport { Field, Formik } from \"formik\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\nimport styled from \"styled-components\";\nimport * as actions from \"../actions/actions\";\nimport { validationSchemaAuthForm } from \"../heplers/yupValidation.js\";\n\nconst mapStateToProps = (state) => {\n  const { isLogged } = state.authState;\n  const { loading, authorization } = state.authState.UIState;\n  const { emailOrPassword } = state.authState.errors;\n  return {\n    isLogged,\n    loading,\n    authorization,\n    emailOrPassword,\n  };\n};\n\nconst actionCreators = {\n  setAuthState: actions.setAuthState,\n  fetchAuthorizationFinally: actions.fetchAuthorizationFinally,\n};\n\nclass Authorization extends React.Component {\n  render() {\n    const { loading, history, emailOrPassword } = this.props;\n    return (\n      <Formik\n        initialValues={{\n          password: \"\",\n          email: \"\",\n        }}\n        validationSchema={validationSchemaAuthForm}\n        onSubmit={async ({ email, password }, { resetForm }) => {\n          const { setAuthState, fetchAuthorizationFinally } = this.props;\n          fetchAuthorizationFinally({ loading: true });\n          const AuthState = await setAuthState(history, { email, password });\n          if (AuthState) {\n            resetForm();\n            history.push(\"/form-route/\");\n          }\n        }}\n      >\n        {({\n          values,\n          errors,\n          touched,\n          handleChange,\n          setFieldTouched,\n          handleSubmit,\n        }) => (\n          <Section>\n            <StyledForm onSubmit={handleSubmit}>\n              <Label>\n                Email<SymSpan>*</SymSpan>\n                <Field\n                  onPressEnter={handleSubmit}\n                  onChange={(event) => {\n                    setFieldTouched(\"email\");\n                    handleChange(event);\n                  }}\n                  value={values.email}\n                  name=\"email\"\n                  id=\"email\"\n                  type=\"email\"\n                  component={StyledInput}\n                />\n              </Label>\n              {(touched.email && errors.email) || <div>&nbsp;</div>}\n              <Label>\n                Password<SymSpan>*</SymSpan>\n                <Field\n                  onPressEnter={handleSubmit}\n                  onChange={(event) => {\n                    setFieldTouched(\"password\");\n                    handleChange(event);\n                  }}\n                  value={values.password}\n                  name=\"password\"\n                  visibilityToggle\n                  id=\"password\"\n                  type=\"password\"\n                  component={StyledInputPassword}\n                />\n              </Label>\n              {(touched.password && errors.password) || <div>&nbsp;</div>}\n              <StyledButton onClick={handleSubmit} loading={loading}>\n                Sign in\n              </StyledButton>\n              {emailOrPassword ? (\n                <div>{`Email or password ${emailOrPassword}`}</div>\n              ) : null}\n              <StyledLink to=\"/form-route/signup\">Sign up</StyledLink>\n            </StyledForm>\n          </Section>\n        )}\n      </Formik>\n    );\n  }\n}\n\nconst ConnectedAuthorization = connect(\n  mapStateToProps,\n  actionCreators\n)(Authorization);\n\nexport default ConnectedAuthorization;\n\nconst Section = styled.section`\n  padding: 30px;\n  width: 500px;\n  background-color: rgba(0, 33, 78, 0.12);\n  border-radius: 10px;\n`;\n\nconst StyledButton = styled(Button)`\n  margin-top: 10px;\n  margin-bottom: 5px;\n  width: 100px;\n`;\n\nconst StyledInput = styled(Input)`\n  width: 300px;\n  display: flex;\n  align-self: flex-start;\n`;\n\nconst StyledInputPassword = styled(Input.Password)`\n  width: 300px;\n  display: flex;\n  align-self: center;\n`;\n\nconst StyledForm = styled.form`\n  display: flex;\n  height: 220px;\n  max-width: 400px;\n  flex-flow: column;\n  align-items: center;\n  justify-content: space-around;\n`;\n\nconst StyledLink = styled(Link)`\n  text-decoration: none;\n  margin-top: 10px;\n`;\n\nconst SymSpan = styled.span`\n  font-size: 25px;\n  color: red;\n  margin-right: auto;\n  margin-left: 2px;\n`;\n\nconst Label = styled.label`\n  display: flex;\n  width: 400px;\n  justify-content: space-between;\n  align-items: center;\n`;\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Link, Redirect } from \"react-router-dom\";\nimport styled from \"styled-components\";\nimport * as actions from \"../actions/actions\";\n\nconst mapStateToProps = (state) => {\n  const { authState } = state;\n  return {\n    isLogged: authState.isLogged,\n  };\n};\n\nconst actionCreators = {\n  fetchAuthorizationSuccess: actions.fetchAuthorizationSuccess,\n};\n\nclass Main extends Component {\n  handleLogOut = () => {\n    const { fetchAuthorizationSuccess } = this.props;\n    fetchAuthorizationSuccess({ isLogged: false });\n  };\n\n  render() {\n    const { isLogged } = this.props;\n    const accept = localStorage.getItem(\"token\");\n    const username = localStorage.getItem(\"username\");\n    if (isLogged === false && !accept) {\n      return <Redirect to=\"/form-route/login\" />;\n    }\n    return (\n      <Wrapper>\n        <Name>{` Hi, ${username}, I know It is you`}</Name>\n        <StyledLink onClick={this.handleLogOut} to=\"/form-route/login\">\n          Logout\n        </StyledLink>\n      </Wrapper>\n    );\n  }\n}\n\nconst ConnectedMain = connect(mapStateToProps, actionCreators)(Main);\n\nexport default ConnectedMain;\n\nconst Wrapper = styled.section`\n  display: flex;\n  flex-flow: column nowrap;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst Name = styled.h2`\n  text-transform: uppercase;\n  color: rgba(0, 13, 34, 0.72);\n`;\n\nconst StyledLink = styled(Link)`\n  text-decoration: none;\n  position: absolute;\n  top: 20px;\n  right: 40px;\n`;\n","import { Button, Input } from \"antd\";\nimport { Field, Formik } from \"formik\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\nimport styled from \"styled-components\";\nimport * as actions from \"../actions/actions\";\nimport { validationSchemaRegForm } from \"../heplers/yupValidation.js\";\n\nconst mapStateToProps = (state) => {\n  const { registration, loading } = state.regState.UIState;\n  const { email, password, username } = state.regState.errors;\n  return {\n    registration,\n    loading,\n    email,\n    password,\n    username,\n  };\n};\nconst actionCreators = {\n  setRegState: actions.setRegState,\n  fetchRegistrationFinally: actions.fetchRegistrationFinally,\n};\n\nclass Registration extends React.Component {\n  render() {\n    const { loading, email, password, username, history } = this.props;\n    return (\n      <Formik\n        initialValues={{\n          password: \"\",\n          email: \"\",\n          name: \"\",\n        }}\n        validationSchema={validationSchemaRegForm}\n        onSubmit={async ({ name, email, password }, { resetForm }) => {\n          const { setRegState, fetchRegistrationFinally } = this.props;\n          fetchRegistrationFinally({ loading: true });\n          const regStateResult = await setRegState(name, email, password);\n          if (regStateResult) {\n            resetForm();\n            history.push(\"/form-route/login\");\n          }\n        }}\n      >\n        {({\n          values,\n          errors,\n          touched,\n          handleChange,\n          setFieldTouched,\n          handleSubmit,\n        }) => (\n          <Section>\n            <StyledForm onSubmit={handleSubmit}>\n              <Label>\n                Name<SymSpan>*</SymSpan>\n                <Field\n                  onPressEnter={handleSubmit}\n                  onChange={(event) => {\n                    setFieldTouched(\"name\");\n                    handleChange(event);\n                  }}\n                  value={values.name}\n                  name=\"name\"\n                  id=\"name\"\n                  type=\"text\"\n                  component={StyledInput}\n                />\n              </Label>\n              {(touched.name && errors.name) || null}\n              {username ? (\n                <div style={{ marginLeft: \"auto\" }}>{`Name ${username}`}</div>\n              ) : null}\n              <Label>\n                Email<SymSpan>*</SymSpan>\n                <Field\n                  onPressEnter={handleSubmit}\n                  onChange={(event) => {\n                    setFieldTouched(\"email\");\n                    handleChange(event);\n                  }}\n                  value={values.email}\n                  name=\"email\"\n                  id=\"email\"\n                  type=\"email\"\n                  component={StyledInput}\n                />\n              </Label>\n              {(touched.email && errors.email) || null}\n              {email ? (\n                <div style={{ marginLeft: \"auto\" }}>{`Email ${email}`}</div>\n              ) : null}\n              <Label>\n                Password<SymSpan>*</SymSpan>\n                <Field\n                  onPressEnter={handleSubmit}\n                  onChange={(event) => {\n                    setFieldTouched(\"password\");\n                    handleChange(event);\n                  }}\n                  value={values.password}\n                  name=\"password\"\n                  visibilityToggle\n                  id=\"password\"\n                  type=\"password\"\n                  component={StyledInputPassword}\n                />\n              </Label>\n              {(touched.password && errors.password) || null}\n              {password ? (\n                <div\n                  style={{ marginLeft: \"auto\" }}\n                >{`Password ${password}`}</div>\n              ) : null}\n              <StyledButton onClick={handleSubmit} loading={loading}>\n                Sign up\n              </StyledButton>\n              <StyledLink to=\"/form-route/login\">Sign in</StyledLink>\n            </StyledForm>\n          </Section>\n        )}\n      </Formik>\n    );\n  }\n}\n\nconst ConnectedRegistration = connect(\n  mapStateToProps,\n  actionCreators\n)(Registration);\n\nexport default ConnectedRegistration;\n\nconst Section = styled.section`\n  padding: 30px;\n  width: 500px;\n  background-color: rgba(0, 33, 78, 0.12);\n  border-radius: 10px;\n`;\n\nconst StyledButton = styled(Button)`\n  margin-top: 10px;\n  margin-bottom: 5px;\n`;\n\nconst StyledInput = styled(Input)`\n  width: 300px;\n  display: flex;\n  align-self: flex-start;\n`;\n\nconst StyledInputPassword = styled(Input.Password)`\n  width: 300px;\n  display: flex;\n  align-self: center;\n`;\n\nconst StyledForm = styled.form`\n  display: flex;\n  height: 300px;\n  max-width: 400px;\n  flex-flow: column;\n  align-items: center;\n  justify-content: space-between;\n`;\n\nconst StyledLink = styled(Link)`\n  text-decoration: none;\n  margin-top: 10px;\n`;\n\nconst SymSpan = styled.span`\n  font-size: 25px;\n  color: red;\n  margin-right: auto;\n  margin-left: 2px;\n`;\n\nconst Label = styled.label`\n  display: flex;\n  width: 400px;\n  justify-content: space-between;\n  align-items: center;\n`;\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport Authorization from \"./Authorization\";\nimport Main from \"./Main\";\nimport Registration from \"./Registration\";\n\nconst mapStateToProps = (state) => {\n  const { authState } = state;\n  return {\n    isLogged: authState.isLogged,\n  };\n};\n\nclass App extends React.Component {\n  render() {\n    const { isLogged, history } = this.props;\n    return (\n      <Router>\n        <Switch>\n          <Route\n            history={history}\n            exact\n            path=\"/form-route/\"\n            isLogged={isLogged}\n            component={Main}\n          />\n          <Route\n            history={history}\n            exact\n            path=\"/form-route/login\"\n            isLogged={isLogged}\n            component={Authorization}\n          />\n          <Route\n            history={history}\n            exact\n            path=\"/form-route/signup\"\n            component={Registration}\n          />\n        </Switch>\n      </Router>\n    );\n  }\n}\n\nconst connectApp = connect(mapStateToProps)(App);\n\nexport default connectApp;\n","import { combineReducers } from \"redux\";\nimport { handleActions } from \"redux-actions\";\nimport * as actions from \"../actions/actions\";\n\nconst authState = handleActions(\n  {\n    [actions.fetchAuthorizationSuccess]: (state, { payload: { isLogged } }) => {\n      return { ...state, isLogged };\n    },\n    [actions.fetchAuthorizationFailure]: (\n      state,\n      { payload: { emailOrPassword, authorization } }\n    ) => {\n      return {\n        ...state,\n        UIState: { ...state.UIState, authorization },\n        errors: {\n          emailOrPassword,\n        },\n      };\n    },\n    [actions.fetchAuthorizationFinally]: (state, { payload: { loading } }) => {\n      return { ...state, UIState: { ...state.UIState, loading } };\n    },\n  },\n  {\n    isLogged: false,\n    UIState: {\n      loading: false,\n      authorization: true,\n    },\n    errors: {\n      email: null,\n      password: null,\n    },\n  }\n);\n\nconst regState = handleActions(\n  {\n    [actions.fetchRegistrationSuccess]: (\n      state,\n      { payload: { registration } }\n    ) => {\n      return { ...state, UIState: { ...state.UIState, registration } };\n    },\n    [actions.fetchRegistrationFailure]: (\n      state,\n      { payload: { email, password, username, registration } }\n    ) => {\n      return {\n        ...state,\n        UIState: { ...state.UIState, registration },\n        errors: {\n          email,\n          password,\n          username,\n        },\n      };\n    },\n    [actions.fetchRegistrationFinally]: (state, { payload: { loading } }) => {\n      return { ...state, UIState: { ...state.UIState, loading } };\n    },\n  },\n  {\n    UIState: {\n      loading: false,\n    },\n    errors: {\n      email: null,\n      password: null,\n      username: null,\n    },\n  }\n);\n\nexport default combineReducers({\n  authState,\n  regState,\n});\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"antd/dist/antd.css\";\nimport { Provider } from \"react-redux\";\nimport thunk from \"redux-thunk\";\nimport { createStore, applyMiddleware, compose } from \"redux\";\nimport { Normalize } from \"styled-normalize\";\nimport { createGlobalStyle } from \"styled-components\";\nimport App from \"./components/App\";\nimport reducers from \"./reducers/reducers\";\n\nconst GlobalStyle = createGlobalStyle`\n*{\n  box-sizing: border-box;\n}\n  body {\n    padding: 100px;\n    background-color: rgba(88,154,255,0.41);\n    font-size: 16px;\n    display:flex;\n    justify-content:center;\n  }\n`;\n\nconst ext = window.__REDUX_DEVTOOLS_EXTENSION__;\nconst devtoolMiddleware = ext && ext();\n\nconst store = createStore(\n  reducers,\n  compose(applyMiddleware(thunk), devtoolMiddleware)\n);\n\nReactDOM.render(\n  <Provider store={store}>\n    <Normalize />\n    <GlobalStyle />\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}