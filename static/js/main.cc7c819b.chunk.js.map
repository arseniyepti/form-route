{"version":3,"sources":["heplers/axiosInstance.js","actions/actions.js","heplers/yupValidation.js","components/AuthMessage.jsx","components/Authorization.jsx","components/Main.jsx","components/RegMessage.jsx","components/Registration.jsx","components/App.js","reducers/reducers.js","index.js"],"names":["axiosInstance","axios","create","baseURL","withCredentials","setAuthorizationSuccess","createAction","setRegistrationSuccess","setAuthUIState","AuthBtnLoading","RegBtnLoading","validationSchemaAuthForm","Yup","shape","password","typeError","max","min","matches","required","email","validationSchemaRegForm","name","AuthMessage","authorization","actionCreators","setAuthState","history","props","dispatch","a","post","user","response","status","isLogged","data","push","loading","actions","Authorization","this","initialValues","validationSchema","onSubmit","resetForm","values","errors","touched","handleChange","setFieldTouched","handleSubmit","Section","StyledForm","Label","SymSpan","onChange","event","value","id","type","component","StyledInput","visibilityToggle","StyledInputPassword","StyledButton","htmlType","StyledLink","to","React","Component","ConnectedAuthorization","connect","state","authState","UIState","styled","section","Button","Input","Password","form","Link","span","label","Main","handleLogOut","Wrapper","Name","onClick","ConnectedMain","username","h2","RegMessage","registration","undefined","setRegState","Registration","ConnectedRegistration","regState","App","exact","path","connectApp","handleActions","payload","combineReducers","GlobalStyle","createGlobalStyle","ext","window","__REDUX_DEVTOOLS_EXTENSION__","devtoolMiddleware","store","createStore","reducers","compose","applyMiddleware","thunk","render","document","getElementById"],"mappings":"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","file":"static/js/main.cc7c819b.chunk.js","sourcesContent":["import axios from \"axios\";\n\nconst axiosInstance = axios.create({\n  baseURL: \"https://conduit.productionready.io/api\",\n  withCredentials: true,\n});\nexport default axiosInstance;\n","import { createAction } from \"redux-actions\";\nimport axiosInstance from \"../heplers/axiosInstance.js\";\n\nexport const setAuthorizationSuccess = createAction(\"AUTH_STATE_\");\nexport const setRegistrationSuccess = createAction(\"REG_STATE\");\nexport const setAuthUIState = createAction(\"AUTH_UI_STATE\");\nexport const AuthBtnLoading = createAction(\"STOP_AUTH_BTN_LOADING\");\nexport const RegBtnLoading = createAction(\"STOP_REG_BTN_LOADING\");\n\nexport const setAuthState = (history, { ...props }) => async (dispatch) => {\n  try {\n    const response = await axiosInstance.post(\"/users/login\", {\n      user: { ...props },\n    });\n    if (response.status === 200) {\n      dispatch(\n        setAuthorizationSuccess({\n          isLogged: true,\n          user: response.data.user,\n        })\n      );\n      history.push(\"/form-route/\");\n    }\n  } catch (error) {\n    dispatch(\n      setAuthUIState({\n        authorization: false,\n      })\n    );\n  } finally {\n    dispatch(\n      AuthBtnLoading({\n        loading: false,\n      })\n    );\n  }\n};\n\nexport const setRegState = (name, email, password) => async (dispatch) => {\n  try {\n    const response = await axiosInstance.post(\"/users\", {\n      user: {\n        username: name,\n        email,\n        password,\n      },\n    });\n    if (response.status === 200) {\n      dispatch(\n        setRegistrationSuccess({\n          registration: true,\n        })\n      );\n    }\n  } catch (error) {\n    dispatch(\n      setRegistrationSuccess({\n        registration: false,\n      })\n    );\n  } finally {\n    dispatch(\n      RegBtnLoading({\n        loading: false,\n      })\n    );\n  }\n};\n","import * as Yup from \"yup\";\n\nconst validationSchemaAuthForm = Yup.object().shape({\n  password: Yup.string()\n    .typeError(\"Неверный формат введенных данных\")\n    .max(40, \"Не более 40 символов\")\n    .min(8, \"Не менее 8 символов\")\n    .matches(\n      /^(?=.*[0-9])(?=.*[a-z])(?=.*[A-Z])/,\n      \"Пароль должен состоять из латинских букв и цифр, а также содержать хотя бы одну строчную, заглавную букву и цифру\"\n    )\n    .required(\"Поле не заполнено\"),\n  email: Yup.string()\n    .typeError(\"Неверный формат введенных данных\")\n    .email(\"Некорректный email адрес\")\n    .required(\"Поле не заполнено\"),\n});\n\nconst validationSchemaRegForm = Yup.object().shape({\n  name: Yup.string()\n    .typeError(\"Неверный формат введенных данных\")\n    .max(50, \"Не более 50 символов\")\n    .required(\"Поле не заполнено\"),\n  password: Yup.string()\n    .typeError(\"Неверный формат введенных данных\")\n    .max(40, \"Не более 40 символов\")\n    .min(8, \"Не менее 8 символов\")\n    .matches(\n      /^(?=.*[0-9])(?=.*[a-z])(?=.*[A-Z])/,\n      \"Пароль должен состоять из латинских букв и цифр, а также содержать хотя бы одну строчную, заглавную букву и цифру\"\n    )\n    .required(\"Поле не заполнено\"),\n  email: Yup.string()\n    .typeError(\"Неверный формат введенных данных\")\n    .email(\"Некорректный email адрес\")\n    .required(\"Поле не заполнено\"),\n});\n\nexport { validationSchemaRegForm, validationSchemaAuthForm };\n","import React from \"react\";\n\nconst AuthMessage = ({ authorization }) => {\n  return authorization ? <div>&nbsp;</div> : <div>Введены неверные данные</div>;\n};\n\nexport default AuthMessage;\n","import { Button, Input } from \"antd\";\nimport \"antd/dist/antd.css\";\nimport { Field, Formik } from \"formik\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\nimport styled from \"styled-components\";\nimport * as actions from \"../actions/actions\";\nimport { validationSchemaAuthForm } from \"../heplers/yupValidation.js\";\nimport AuthMessage from \"./AuthMessage\";\n\nconst mapStateToProps = (state) => {\n  const { authState } = state;\n  return {\n    isLogged: authState.isLogged,\n    loading: authState.UIState.loading,\n    authorization: authState.UIState.authorization,\n  };\n};\n\nconst actionCreators = {\n  setAuthState: actions.setAuthState,\n  AuthBtnLoading: actions.AuthBtnLoading,\n};\n\nclass Authorization extends React.Component {\n  render() {\n    const { loading, authorization, history } = this.props;\n    return (\n      <Formik\n        initialValues={{\n          password: \"\",\n          email: \"\",\n        }}\n        validationSchema={validationSchemaAuthForm}\n        onSubmit={({ email, password }, { resetForm }) => {\n          const { setAuthState, AuthBtnLoading } = this.props;\n          AuthBtnLoading({ loading: true });\n          setAuthState(history, { email, password });\n          if (authorization && loading) {\n            resetForm();\n          }\n        }}\n      >\n        {({\n          values,\n          errors,\n          touched,\n          handleChange,\n          setFieldTouched,\n          handleSubmit,\n        }) => (\n          <Section>\n            <StyledForm onSubmit={handleSubmit}>\n              <Label>\n                Email<SymSpan>*</SymSpan>\n                <Field\n                  onChange={(event) => {\n                    setFieldTouched(\"email\");\n                    handleChange(event);\n                  }}\n                  value={values.email}\n                  name=\"email\"\n                  id=\"email\"\n                  type=\"email\"\n                  component={StyledInput}\n                />\n              </Label>\n              {(touched.email && errors.email) || <div>&nbsp;</div>}\n              <Label>\n                Пароль<SymSpan>*</SymSpan>\n                <Field\n                  onChange={(event) => {\n                    setFieldTouched(\"password\");\n                    handleChange(event);\n                  }}\n                  value={values.password}\n                  name=\"password\"\n                  visibilityToggle\n                  id=\"password\"\n                  type=\"password\"\n                  component={StyledInputPassword}\n                />\n              </Label>\n              {(touched.password && errors.password) || <div>&nbsp;</div>}\n              <StyledButton loading={loading} htmlType=\"submit\">\n                Войти\n              </StyledButton>\n              <AuthMessage authorization={authorization} />\n              <StyledLink to=\"/form-route/signup\">Регистрация</StyledLink>\n            </StyledForm>\n          </Section>\n        )}\n      </Formik>\n    );\n  }\n}\n\nconst ConnectedAuthorization = connect(\n  mapStateToProps,\n  actionCreators\n)(Authorization);\n\nexport default ConnectedAuthorization;\n\nconst Section = styled.section`\n  padding: 30px;\n  width: 500px;\n  background-color: rgba(0, 33, 78, 0.12);\n  border-radius: 10px;\n`;\n\nconst StyledButton = styled(Button)`\n  margin-top: 10px;\n  margin-bottom: 5px;\n  width: 100px;\n`;\n\nconst StyledInput = styled(Input)`\n  width: 300px;\n  display: flex;\n  align-self: flex-start;\n`;\n\nconst StyledInputPassword = styled(Input.Password)`\n  width: 300px;\n  display: flex;\n  align-self: center;\n`;\n\nconst StyledForm = styled.form`\n  display: flex;\n  height: 220px;\n  flex-flow: column;\n  align-items: center;\n  justify-content: space-around;\n`;\n\nconst StyledLink = styled(Link)`\n  text-decoration: none;\n  margin-top: 10px;\n`;\n\nconst SymSpan = styled.span`\n  font-size: 25px;\n  color: red;\n  margin-right: auto;\n  margin-left: 2px;\n`;\n\nconst Label = styled.label`\n  display: flex;\n  width: 400px;\n  justify-content: space-between;\n  align-items: center;\n`;\n","import \"antd/dist/antd.css\";\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Link, Redirect } from \"react-router-dom\";\nimport styled from \"styled-components\";\nimport * as actions from \"../actions/actions\";\n\nconst mapStateToProps = (state) => {\n  const { authState } = state;\n  return {\n    isLogged: authState.isLogged,\n    user: authState.user ? authState.user.username : null,\n  };\n};\n\nconst actionCreators = {\n  setAuthorizationSuccess: actions.setAuthorizationSuccess,\n};\n\nclass Main extends Component {\n  handleLogOut = () => {\n    const { setAuthorizationSuccess } = this.props;\n    setAuthorizationSuccess({ isLogged: false });\n  };\n\n  render() {\n    const { isLogged, user } = this.props;\n    if (isLogged === false) {\n      return <Redirect to=\"/form-route/login\" />;\n    }\n    return (\n      <Wrapper>\n        <Name>{` Привет ${user}`}</Name>\n        <StyledLink onClick={this.handleLogOut} to=\"/form-route/login\">\n          Выход\n        </StyledLink>\n      </Wrapper>\n    );\n  }\n}\n\nconst ConnectedMain = connect(mapStateToProps, actionCreators)(Main);\n\nexport default ConnectedMain;\n\nconst Wrapper = styled.section`\n  display: flex;\n  flex-flow: column nowrap;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst Name = styled.h2`\n  text-transform: uppercase;\n  color: rgba(0, 13, 34, 0.72);\n`;\n\nconst StyledLink = styled(Link)`\n  text-decoration: none;\n  position: absolute;\n  top: 20px;\n  right: 40px;\n`;\n","import React from \"react\";\n\nconst RegMessage = ({ registration }) => {\n  if (registration === undefined) {\n    return <div>&nbsp;</div>;\n  }\n  return registration ? (\n    <div>Регистрация прошла успешно, нажмите \"Войти\"</div>\n  ) : (\n    <div>Данный email уже существует</div>\n  );\n};\n\nexport default RegMessage;\n","import { Button, Input } from \"antd\";\nimport \"antd/dist/antd.css\";\nimport { Field, Formik } from \"formik\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\nimport styled from \"styled-components\";\nimport * as actions from \"../actions/actions\";\nimport { validationSchemaRegForm } from \"../heplers/yupValidation.js\";\nimport RegMessage from \"./RegMessage.jsx\";\n\nconst mapStateToProps = (state) => {\n  const { regState } = state;\n  return {\n    registration: regState.UIState.registration,\n    loading: regState.UIState.loading,\n  };\n};\n\nconst actionCreators = {\n  setRegState: actions.setRegState,\n  RegBtnLoading: actions.RegBtnLoading,\n};\n\nclass Registration extends React.Component {\n  render() {\n    const { registration, loading } = this.props;\n    return (\n      <Formik\n        initialValues={{\n          password: \"\",\n          email: \"\",\n          name: \"\",\n        }}\n        validationSchema={validationSchemaRegForm}\n        onSubmit={({ name, email, password }, { resetForm }) => {\n          const { setRegState, RegBtnLoading } = this.props;\n          RegBtnLoading({ loading: true });\n          setRegState(name, email, password);\n          if (registration) {\n            resetForm();\n          }\n        }}\n      >\n        {({\n          values,\n          errors,\n          touched,\n          handleChange,\n          setFieldTouched,\n          handleSubmit,\n        }) => (\n          <Section>\n            <StyledForm onSubmit={handleSubmit}>\n              <Label>\n                Имя<SymSpan>*</SymSpan>\n                <Field\n                  onChange={(event) => {\n                    setFieldTouched(\"name\");\n                    handleChange(event);\n                  }}\n                  value={values.name}\n                  name=\"name\"\n                  id=\"name\"\n                  type=\"text\"\n                  component={StyledInput}\n                />\n              </Label>\n              {(touched.name && errors.name) || <div>&nbsp;</div>}\n              <Label>\n                Email<SymSpan>*</SymSpan>\n                <Field\n                  onChange={(event) => {\n                    setFieldTouched(\"email\");\n                    handleChange(event);\n                  }}\n                  value={values.email}\n                  name=\"email\"\n                  id=\"email\"\n                  type=\"email\"\n                  component={StyledInput}\n                />\n              </Label>\n              {(touched.email && errors.email) || <div>&nbsp;</div>}\n              <Label>\n                Пароль<SymSpan>*</SymSpan>\n                <Field\n                  onChange={(event) => {\n                    setFieldTouched(\"password\");\n                    handleChange(event);\n                  }}\n                  value={values.password}\n                  name=\"password\"\n                  visibilityToggle\n                  id=\"password\"\n                  type=\"password\"\n                  component={StyledInputPassword}\n                />\n              </Label>\n              {(touched.password && errors.password) || <div>&nbsp;</div>}\n              <StyledButton loading={loading} htmlType=\"submit\">\n                Регистрация\n              </StyledButton>\n              {<RegMessage registration={registration} />}\n              <StyledLink to=\"/form-route/login\">Войти</StyledLink>\n            </StyledForm>\n          </Section>\n        )}\n      </Formik>\n    );\n  }\n}\n\nconst ConnectedRegistration = connect(\n  mapStateToProps,\n  actionCreators\n)(Registration);\n\nexport default ConnectedRegistration;\n\nconst Section = styled.section`\n  padding: 30px;\n  width: 500px;\n  background-color: rgba(0, 33, 78, 0.12);\n  border-radius: 10px;\n`;\n\nconst StyledButton = styled(Button)`\n  margin-top: 10px;\n  margin-bottom: 5px;\n`;\n\nconst StyledInput = styled(Input)`\n  width: 300px;\n  display: flex;\n  align-self: flex-start;\n`;\n\nconst StyledInputPassword = styled(Input.Password)`\n  width: 300px;\n  display: flex;\n  align-self: center;\n`;\n\nconst StyledForm = styled.form`\n  display: flex;\n  height: 300px;\n  flex-flow: column;\n  align-items: center;\n  justify-content: space-around;\n`;\n\nconst StyledLink = styled(Link)`\n  text-decoration: none;\n  margin-top: 10px;\n`;\n\nconst SymSpan = styled.span`\n  font-size: 25px;\n  color: red;\n  margin-right: auto;\n  margin-left: 2px;\n`;\n\nconst Label = styled.label`\n  display: flex;\n  width: 400px;\n  justify-content: space-between;\n  align-items: center;\n`;\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport Authorization from \"./Authorization\";\nimport Main from \"./Main\";\nimport Registration from \"./Registration\";\n\nconst mapStateToProps = (state) => {\n  const { authState } = state;\n  return {\n    isLogged: authState.isLogged,\n  };\n};\n\nclass App extends React.Component {\n  render() {\n    const { isLogged, history } = this.props;\n    return (\n      <Router>\n        <Switch>\n          <Route\n            history={history}\n            exact\n            path=\"/form-route/\"\n            isLogged={isLogged}\n            component={Main}\n          />\n          <Route\n            history={history}\n            exact\n            path=\"/form-route/login\"\n            isLogged={isLogged}\n            component={Authorization}\n          />\n          <Route\n            history={history}\n            exact\n            path=\"/form-route/signup\"\n            component={Registration}\n          />\n        </Switch>\n      </Router>\n    );\n  }\n}\n\nconst connectApp = connect(mapStateToProps)(App);\n\nexport default connectApp;\n","import { combineReducers } from \"redux\";\nimport { handleActions } from \"redux-actions\";\nimport * as actions from \"../actions/actions\";\n\nconst authState = handleActions(\n  {\n    [actions.setAuthorizationSuccess]: (\n      state,\n      { payload: { isLogged, user } }\n    ) => {\n      return { ...state, isLogged, user };\n    },\n    [actions.setAuthUIState]: (state, { payload: { authorization } }) => {\n      return { ...state, UIState: { ...state.UIState, authorization } };\n    },\n    [actions.AuthBtnLoading]: (state, { payload: { loading } }) => {\n      return { ...state, UIState: { ...state.UIState, loading } };\n    },\n  },\n  {\n    isLogged: false,\n    UIState: {\n      loading: false,\n      authorization: true,\n    },\n  }\n);\n\nconst regState = handleActions(\n  {\n    [actions.setRegistrationSuccess]: (\n      state,\n      { payload: { registration } }\n    ) => {\n      return { ...state, UIState: { ...state.UIState, registration } };\n    },\n    [actions.RegBtnLoading]: (state, { payload: { loading } }) => {\n      return { ...state, UIState: { ...state.UIState, loading } };\n    },\n  },\n  {\n    UIState: {\n      loading: false,\n      registration: undefined,\n    },\n  }\n);\n\nexport default combineReducers({\n  authState,\n  regState,\n});\n","import React from \"react\";\nimport { render } from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport thunk from \"redux-thunk\";\nimport { createStore, applyMiddleware, compose } from \"redux\";\nimport { Normalize } from \"styled-normalize\";\nimport { createGlobalStyle } from \"styled-components\";\nimport App from \"./components/App\";\nimport reducers from \"./reducers/reducers\";\n\nconst GlobalStyle = createGlobalStyle`\n*{\n  box-sizing: border-box;\n}\n  body {\n    padding: 100px;\n    background-color: rgba(88,154,255,0.41);\n    font-family: 'Impact', sans-serif;\n    font-size: 16px;\n    display:flex;\n    justify-content:center;\n  }\n`;\n\nconst ext = window.__REDUX_DEVTOOLS_EXTENSION__;\nconst devtoolMiddleware = ext && ext();\n\nconst store = createStore(\n  reducers,\n  compose(applyMiddleware(thunk), devtoolMiddleware)\n);\n\nrender(\n  <Provider store={store}>\n    <Normalize />\n    <GlobalStyle />\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}