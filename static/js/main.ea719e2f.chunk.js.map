{"version":3,"sources":["heplers/helpers.js","heplers/axiosInstance.js","actions/actions.js","heplers/yupValidation.js","components/AddEditArticle.jsx","components/Article.jsx","components/Authorization.jsx","components/Main.jsx","components/Registration.jsx","components/App.js","reducers/reducers.js","index.js"],"names":["openNotification","notification","open","message","description","duration","showConfirm","slug","fetchDeleteArticles","fetchArticles","Modal","confirm","icon","ExclamationCircleOutlined","content","onOk","a","onCancel","showModal","state","authModalState","handleOk","history","authModalStateSuccess","push","setAccess","name","authModalStateFailure","value","axiosInstanceAuth","axios","create","baseURL","validateStatus","status","interceptors","request","use","token","localStorage","getItem","headers","Authorization","err","Promise","reject","response","setItem","window","location","reload","fetchAuthorizationSuccess","createAction","fetchAuthorizationFailure","fetchRegistrationFailure","fetchRegistrationSuccess","fetchArticlesSuccess","fetchArticlesFailure","fetchFavouriteArticleSuccess","fetchFavouriteArticleFailure","fetchAddEditArticleSuccess","fetchAddEditArticleFailure","fetchDeleteArticleSuccess","fetchDeleteArticleFailure","count","dispatch","url","get","data","articles","articlesCount","validationSchemaAuthForm","Yup","shape","email","typeError","required","password","validationSchemaRegForm","repeatPassword","oneOf","validationSchemaAddArticle","title","body","actionCreators","fetchAddEditArticles","tagList","action","article","post","put","actions","AddEditArticle","addIdToTagList","length","map","tag","id","_uniqueId","this","props","addEditArticleState","initialValues","tags","validationSchema","onSubmit","values","filter","go","errors","touched","handleChange","setFieldValue","handleSubmit","isSubmitting","setFieldTouched","Section","StyledForm","Label","Span","Item","hasFeedback","help","onPressEnter","onChange","event","type","component","StyledInput","autoSize","minRows","maxRows","cols","rows","StyledInputBody","TagsWrap","render","arrayHelpers","addTags","unshift","StyledInputTag","key","defaultValue","TagsButton","onClick","StyledButton","loading","StyledLink","to","React","Component","ConnectedAddArticle","connect","withRouter","styled","section","Button","Input","span","TextArea","Form","Link","label","div","fetchFavouriteArticle","favorite","delete","Article","setFavouriteArticle","favorited","articlesFavouriteFetchingState","date","username","author","favoritesCount","createdAt","join","Wrap","TitleWrap","Title","EditWrap","StyledDeleteTwoTone","EditButton","Description","Paragraph","Info","Author","CopyrightIcon","CalendarIcon","formatDistanceToNow","Date","addSuffix","Tags","TagsIcon","Likes","HeartIcon","twoToneColor","ConnectedAuthorization","pathname","p","CopyrightCircleTwoTone","HeartTwoTone","CalendarTwoTone","QuestionCircleTwoTone","DeleteTwoTone","fetchAuthorization","user","emailOrPassword","resetForm","authorization","SymSpan","visibilityToggle","StyledInputPassword","style","color","Password","Main","handleLogOut","removeItem","renderArticles","articlesFetchingState","Container","StyledPagination","defaultCurrent","pageSize","showSizeChanger","total","showTotal","range","AuthMessage","MessageLink","Wrapper","Name","changeName","StyledSpin","size","tip","AddButton","ConnectedMain","Pagination","Spin","fetchRegistration","console","log","Registration","registration","marginLeft","ConnectedRegistration","App","visible","exact","path","match","find","params","connectApp","handleActions","payload","changedArticles","combineReducers","GlobalStyle","createGlobalStyle","ext","__REDUX_DEVTOOLS_EXTENSION__","devtoolMiddleware","store","createStore","reducers","compose","applyMiddleware","thunk","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.ea719e2f.chunk.js","sourcesContent":["import { ExclamationCircleOutlined } from \"@ant-design/icons\";\nimport { formatDistanceToNow } from \"date-fns\";\nimport React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Modal, notification } from \"antd\";\n\nexport const convertDate = (date) => {\n  return formatDistanceToNow(new Date(date), { addSuffix: true });\n};\n\nexport const message = (result) => {\n  if (result === \"authError\") {\n    return <div>You need to log in</div>;\n  }\n  return <div>&nbsp;</div>;\n};\n\nexport const changeLog = () => {\n  if (localStorage.getItem(\"token\")) {\n    return \"Log out\";\n  }\n  return \"Sign in\";\n};\n\nexport const openNotification = () => {\n  notification.open({\n    message: \"Message from server\",\n    description: \"Ooops, something wrong\",\n    duration: 2,\n  });\n};\n\nexport const showConfirm = (slug, fetchDeleteArticles, fetchArticles) => () => {\n  Modal.confirm({\n    icon: <ExclamationCircleOutlined />,\n    content: \"Are you sure?\",\n    onOk: async () => {\n      await fetchDeleteArticles(slug);\n      await fetchArticles();\n    },\n    onCancel() {},\n  });\n};\n\nexport const showModal = (state, authModalState) => {\n  return authModalState === \"failed\" || state;\n};\n\nexport const handleOk = (history, authModalStateSuccess) => () => {\n  authModalStateSuccess();\n  showModal(false, \"failed\");\n  return history.push(\"/form-route/login\");\n};\n\nexport const onCancel = (authModalStateSuccess) => () => {\n  showModal(false, \"failed\");\n  return authModalStateSuccess();\n};\n\nexport const changeName = () => {\n  const name = localStorage.getItem(\"username\");\n  if (name) {\n    return name;\n  }\n  return <Link to=\"/form-route/signup\">Sign up</Link>;\n};\n\nexport const setAccess = (\n  name,\n  authModalStateFailure,\n  history,\n  slug,\n  value\n) => () => {\n  if (!name) {\n    return authModalStateFailure();\n  }\n  return value === \"add\"\n    ? history.push(`/form-route/add`)\n    : history.push(`/form-route/${slug}/edit`);\n};\n","import axios from \"axios\";\nimport { showModal } from \"../heplers/helpers\";\n\nexport const axiosInstanceAuth = axios.create({\n  baseURL: \"https://conduit.productionready.io/api\",\n  validateStatus: function (status) {\n    if (status === 401) {\n      showModal(true);\n    }\n    return status >= 200 && status < 300;\n  },\n});\n\naxiosInstanceAuth.interceptors.request.use(\n  (request) => {\n    const token = localStorage.getItem(\"token\");\n    if (token) {\n      request.headers.Authorization = `Token ${token}`;\n    }\n    return request;\n  },\n  (err) => {\n    return Promise.reject(err);\n  }\n);\n\naxiosInstanceAuth.interceptors.response.use(\n  function (response) {\n    return response;\n  },\n  (err) => {\n    if (err.response.status === 401) {\n      localStorage.setItem(\"token\", \"\");\n      window.location.reload();\n    }\n    return Promise.reject(err);\n  }\n);\n","import { createAction } from \"redux-actions\";\nimport { axiosInstanceAuth } from \"../heplers/axiosInstance.js\";\n\nexport const fetchAuthorizationSuccess = createAction(\"AUTH_FETCH_SUCCESS\");\nexport const fetchAuthorizationFailure = createAction(\"AUTH_FETCH_FAILURE\");\n\nexport const fetchRegistrationFailure = createAction(\"REG_FETCH_FAILURE\");\nexport const fetchRegistrationSuccess = createAction(\"REG_FETCH_SUCCESS\");\n\nexport const fetchArticlesSuccess = createAction(\"ARTICLES_FETCH_SUCCESS\");\nexport const fetchArticlesFailure = createAction(\"ARTICLES_FETCH_FAILURE\");\n\nexport const fetchFavouriteArticleSuccess = createAction(\n  \"FAVOURITE_FETCH_SUCCESS\"\n);\nexport const fetchFavouriteArticleFailure = createAction(\n  \"FAVOURITE_FETCH_FAILURE\"\n);\n\nexport const fetchAddEditArticleSuccess = createAction(\n  \"ADD_EDIT_FETCH_SUCCESS\"\n);\nexport const fetchAddEditArticleFailure = createAction(\n  \"ADD_EDIT_FETCH_FAILURE\"\n);\n\nexport const fetchDeleteArticleSuccess = createAction(\"DELETE_FETCH_SUCCESS\");\nexport const fetchDeleteArticleFailure = createAction(\"DELETE_FETCH_FAILURE\");\n\nexport const authModalStateSuccess = createAction(\"AUTH_STATE_SUCCESS\");\nexport const authModalStateFailure = createAction(\"AUTH_STATE_FAILURE\");\n\nexport const fetchAuthorization = ({ email, password }) => async (dispatch) => {\n  const url = \"/users/login\";\n  try {\n    const response = await axiosInstanceAuth.post(url, {\n      user: { email, password },\n    });\n    const { token, username } = response.data.user;\n    localStorage.setItem(\"token\", token);\n    localStorage.setItem(\"username\", username);\n    dispatch(fetchAuthorizationSuccess());\n  } catch (error) {\n    const emailOrPassword = error.response.data.errors[\"email or password\"];\n    dispatch(\n      fetchAuthorizationFailure({\n        emailOrPassword,\n      })\n    );\n  }\n};\n\nexport const fetchRegistration = (username, email, password) => async (\n  dispatch\n) => {\n  const url = \"/users\";\n  try {\n    await axiosInstanceAuth.post(url, {\n      user: {\n        username,\n        email,\n        password,\n      },\n    });\n    dispatch(fetchRegistrationSuccess());\n  } catch (error) {\n    const { email, password, username } = error.response.data.errors;\n    console.log(email, password, username);\n    dispatch(\n      fetchRegistrationFailure({\n        email,\n        password,\n        username,\n      })\n    );\n  }\n};\n\nexport const fetchArticles = (count = 0) => async (dispatch) => {\n  const url = `/articles?limit=10&offset=${count}`;\n  try {\n    const {\n      data: { articles, articlesCount },\n    } = await axiosInstanceAuth.get(url);\n    dispatch(fetchArticlesSuccess({ articles, articlesCount }));\n  } catch (error) {\n    dispatch(fetchArticlesFailure());\n  }\n};\n\nexport const fetchFavouriteArticle = (slug, favorite) => async (dispatch) => {\n  const url = `/articles/${slug}/favorite`;\n  try {\n    return favorite\n      ? await axiosInstanceAuth.delete(url)\n      : await axiosInstanceAuth.post(url);\n  } catch (error) {\n    dispatch(fetchFavouriteArticleFailure());\n  }\n};\n\nexport const fetchAddEditArticles = (\n  { title, description, body },\n  tagList,\n  action,\n  slug = \"\"\n) => async (dispatch) => {\n  const data = {\n    article: {\n      title,\n      description,\n      body,\n      tagList,\n    },\n  };\n  const url = action === \"add\" ? `/articles` : `/articles/${slug}`;\n  try {\n    action === \"add\"\n      ? await axiosInstanceAuth.post(url, data)\n      : await axiosInstanceAuth.put(url, data);\n    dispatch(fetchAddEditArticleSuccess());\n  } catch (error) {\n    dispatch(fetchAddEditArticleFailure(error.response.status));\n  }\n};\n\nexport const fetchDeleteArticles = (slug) => async (dispatch) => {\n  const url = `/articles/${slug}`;\n  try {\n    await axiosInstanceAuth.delete(url);\n    dispatch(fetchDeleteArticleSuccess({ slug }));\n  } catch (error) {\n    dispatch(fetchDeleteArticleFailure());\n  }\n};\n","import * as Yup from \"yup\";\n\nconst validationSchemaAuthForm = Yup.object().shape({\n  email: Yup.string()\n    .typeError(\"Неверный формат введенных данных\")\n    .email(\"Некорректный email адрес\")\n    .required(\"Поле не заполнено\"),\n  password: Yup.string().required(\"Поле не заполнено\"),\n});\n\nconst validationSchemaRegForm = Yup.object().shape({\n  name: Yup.string().required(\"Поле не заполнено\"),\n  password: Yup.string().required(\"Поле не заполнено\"),\n  repeatPassword: Yup.string()\n    .oneOf([Yup.ref(\"password\")], \"Пароли не совпадают\")\n    .required(\"Поле не заполнено\"),\n  email: Yup.string()\n    .required(\"Поле не заполнено\")\n    .email(\"Некорректный email адрес\")\n    .typeError(\"Неверный формат введенных данных\"),\n});\n\nconst validationSchemaAddArticle = Yup.object().shape({\n  title: Yup.string().required(\"Поле не заполнено\"),\n  description: Yup.string().required(\"Поле не заполнено\"),\n  body: Yup.string().required(\"Поле не заполнено\"),\n});\n\nexport {\n  validationSchemaRegForm,\n  validationSchemaAuthForm,\n  validationSchemaAddArticle,\n};\n","import { Form, Button, Input } from \"antd\";\nimport { Field, Formik, FieldArray } from \"formik\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport _uniqueId from \"lodash/uniqueId\";\nimport { Link, withRouter } from \"react-router-dom\";\nimport styled from \"styled-components\";\nimport { message } from \"../heplers/helpers\";\nimport * as actions from \"../actions/actions\";\nimport { validationSchemaAddArticle } from \"../heplers/yupValidation\";\n\nconst mapStateToProps = (state) => {\n  const { addEditArticleState } = state;\n  return {\n    addEditArticleState,\n  };\n};\n\nconst actionCreators = {\n  fetchAddEditArticles: actions.fetchAddEditArticles,\n  fetchArticles: actions.fetchArticles,\n};\n\nclass AddEditArticle extends React.Component {\n  addIdToTagList = (tagList) => {\n    return tagList.length === 0\n      ? []\n      : tagList.map((tag) => ({ tag, id: _uniqueId() }));\n  };\n\n  render() {\n    const {\n      addEditArticleState,\n      fetchAddEditArticles,\n      fetchArticles,\n      history,\n    } = this.props;\n    const { article = \"\" } = this.props;\n    const {\n      slug = \"\",\n      description = \"\",\n      tagList = [],\n      title = \"\",\n      body = \"\",\n    } = article;\n    return (\n      <Formik\n        initialValues={{\n          title: title,\n          description: description,\n          body: body,\n          tags: this.addIdToTagList(tagList),\n        }}\n        validationSchema={validationSchemaAddArticle}\n        onSubmit={async (values) => {\n          const tags = values.tags\n            .map(({ tag, id }) => {\n              if (values[`tags${id}`] && values[`tags${id}`] !== tag) {\n                return values[`tags${id}`];\n              }\n              return tag;\n            })\n            .filter((tag) => tag !== \"\");\n          const action = article ? \"edit\" : \"add\";\n          await fetchAddEditArticles(values, tags, action, slug);\n          const { addEditArticleState } = this.props;\n          fetchArticles();\n          if (!article && addEditArticleState === \"success\") {\n            history.push(\"/form-route/\");\n          }\n          if (article && addEditArticleState === \"success\") {\n            history.go(-1);\n          }\n        }}\n      >\n        {({\n          values,\n          errors,\n          touched,\n          handleChange,\n          setFieldValue,\n          handleSubmit,\n          isSubmitting,\n          setFieldTouched,\n        }) => (\n          <Section>\n            <StyledForm onSubmit={handleSubmit}>\n              <Label>\n                Title<Span>*</Span>\n                <Form.Item\n                  hasFeedback\n                  validateStatus={\n                    touched.title && errors.title ? \"error\" : \"validate\"\n                  }\n                  help={touched.title && errors.title ? errors.title : null}\n                >\n                  <Field\n                    onPressEnter={handleSubmit}\n                    onChange={(event) => {\n                      setFieldTouched(\"title\");\n                      handleChange(event);\n                    }}\n                    value={values.title}\n                    name=\"title\"\n                    id=\"title\"\n                    type=\"text\"\n                    component={StyledInput}\n                  />\n                </Form.Item>\n              </Label>\n              <Label>\n                Description<Span>*</Span>\n                <Form.Item\n                  hasFeedback\n                  validateStatus={\n                    touched.description && errors.description\n                      ? \"error\"\n                      : \"validate\"\n                  }\n                  help={\n                    touched.description && errors.description\n                      ? errors.description\n                      : null\n                  }\n                >\n                  <Field\n                    onPressEnter={handleSubmit}\n                    onChange={(event) => {\n                      setFieldTouched(\"description\");\n                      handleChange(event);\n                    }}\n                    value={values.description}\n                    name=\"description\"\n                    id=\"description\"\n                    type=\"text\"\n                    component={StyledInput}\n                  />\n                </Form.Item>\n              </Label>\n              <Label>\n                Text<Span>*</Span>\n                <Form.Item\n                  hasFeedback\n                  validateStatus={\n                    touched.body && errors.body ? \"error\" : \"validate\"\n                  }\n                  help={touched.body && errors.body ? errors.body : null}\n                >\n                  <Field\n                    autoSize={{ minRows: 2, maxRows: 10 }}\n                    onPressEnter={handleSubmit}\n                    onChange={(event) => {\n                      setFieldTouched(\"body\");\n                      handleChange(event);\n                    }}\n                    value={values.body}\n                    name=\"body\"\n                    id=\"body\"\n                    type=\"text\"\n                    cols=\"20\"\n                    rows=\"10\"\n                    component={StyledInputBody}\n                  />\n                </Form.Item>\n              </Label>\n              <Label>\n                Tags\n                <TagsWrap>\n                  <FieldArray\n                    name=\"tags\"\n                    render={(arrayHelpers) => {\n                      const addTags = () => {\n                        setFieldValue(\"tag\", \"\");\n                        return arrayHelpers.unshift({\n                          tag: values.tag,\n                          id: _uniqueId(),\n                        });\n                      };\n                      return (\n                        <>\n                          <Field\n                            onChange={handleChange}\n                            onPressEnter={addTags}\n                            value={values.tag}\n                            name=\"tag\"\n                            id=\"tag\"\n                            type=\"text\"\n                            component={StyledInputTag}\n                          />\n                          {values.tags.map(({ tag, id }) => {\n                            return (\n                              <Field\n                                key={id}\n                                defaultValue={tag}\n                                value={values[`tags${id}`]}\n                                onChange={handleChange}\n                                id={`tags${id}`}\n                                name={`tags${id}`}\n                                type=\"text\"\n                                component={StyledInputTag}\n                              />\n                            );\n                          })}\n                          <TagsButton type=\"primary\" onClick={addTags}>\n                            Add\n                          </TagsButton>\n                        </>\n                      );\n                    }}\n                  />\n                </TagsWrap>\n              </Label>\n              {message(addEditArticleState)}\n              <StyledButton\n                loading={isSubmitting}\n                type=\"primary\"\n                onClick={handleSubmit}\n              >\n                {article ? \"Edit\" : \"Add\"}\n              </StyledButton>\n              <StyledLink to=\"/form-route/\">Main</StyledLink>\n            </StyledForm>\n          </Section>\n        )}\n      </Formik>\n    );\n  }\n}\n\nconst ConnectedAddArticle = connect(\n  mapStateToProps,\n  actionCreators\n)(AddEditArticle);\n\nexport default withRouter(ConnectedAddArticle);\n\nconst Section = styled.section`\n  width: 600px;\n  background-color: rgba(0, 33, 78, 0.12);\n  border-radius: 10px;\n  box-shadow: 0 0 5px 0 rgba(0, 0, 0, 0.5);\n`;\n\nconst StyledButton = styled(Button)`\n  width: 100px;\n  text-transform: uppercase;\n`;\n\nconst StyledInput = styled(Input)`\n  width: 300px;\n  display: flex;\n  align-self: flex-start;\n`;\n\nconst Span = styled.span`\n  font-size: 18px;\n  color: red;\n  margin-right: auto;\n  margin-left: 2px;\n`;\n\nconst StyledInputTag = styled(Input)`\n  width: 300px;\n  margin-bottom: 10px;\n  display: flex;\n  align-self: flex-start;\n`;\n\nconst StyledInputBody = styled(Input.TextArea)`\n  width: 300px;\n  display: flex;\n  align-self: center;\n`;\n\nconst StyledForm = styled(Form)`\n  display: flex;\n  max-width: 600px;\n  padding: 30px 0;\n  min-height: 450px;\n  flex-flow: column;\n  align-items: center;\n  justify-content: space-around;\n`;\n\nconst StyledLink = styled(Link)`\n  text-decoration: none;\n  margin-top: 10px;\n`;\n\nconst Label = styled.label`\n  position: relative;\n  display: flex;\n  width: 420px;\n  justify-content: space-between;\n  align-items: baseline;\n`;\n\nconst TagsWrap = styled.div``;\n\nconst TagsButton = styled(Button)`\n  position: absolute;\n  top: 0;\n  right: -80px;\n  width: 70px;\n`;\n","import {\n  CalendarTwoTone,\n  CopyrightCircleTwoTone,\n  QuestionCircleTwoTone,\n  HeartTwoTone,\n  DeleteTwoTone,\n} from \"@ant-design/icons\";\nimport { Button } from \"antd\";\nimport { Link, withRouter } from \"react-router-dom\";\nimport * as actions from \"../actions/actions\";\nimport {\n  convertDate,\n  setAccess,\n  openNotification,\n  showConfirm,\n} from \"../heplers/helpers\";\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport styled from \"styled-components\";\n\nconst mapStateToProps = (state) => {\n  const { articlesFavouriteFetchingState } = state;\n  return {\n    articlesFavouriteFetchingState,\n  };\n};\n\nconst actionCreators = {\n  fetchFavouriteArticle: actions.fetchFavouriteArticle,\n  fetchDeleteArticles: actions.fetchDeleteArticles,\n  fetchArticles: actions.fetchArticles,\n  authModalStateFailure: actions.authModalStateFailure,\n  fetchFavouriteArticleSuccess: actions.fetchFavouriteArticleSuccess,\n};\n\nclass Article extends Component {\n  setFavouriteArticle = (name, authModalStateFailure) => async () => {\n    const {\n      fetchFavouriteArticle,\n      fetchFavouriteArticleSuccess,\n      article: { slug, favorited },\n    } = this.props;\n    if (!name) {\n      return authModalStateFailure();\n    }\n    fetchFavouriteArticleSuccess({ slug });\n    await fetchFavouriteArticle(slug, favorited);\n    const { articlesFavouriteFetchingState } = this.props;\n    if (articlesFavouriteFetchingState === \"failed\") {\n      openNotification();\n      fetchFavouriteArticleSuccess({ slug });\n    }\n  };\n\n  render() {\n    const {\n      author: { username },\n      favoritesCount,\n      favorited,\n      description,\n      createdAt,\n      slug,\n      tagList,\n      title,\n      body,\n    } = this.props.article;\n\n    const {\n      history,\n      location,\n      authModalStateFailure,\n      fetchDeleteArticles,\n      fetchArticles,\n    } = this.props;\n    const tags = tagList.join(\", \");\n    const name = localStorage.getItem(\"username\");\n    return (\n      <Wrap>\n        <TitleWrap>\n          <Title to={`/form-route/articles/${slug}`}>{title}</Title>\n          <EditWrap>\n            <StyledDeleteTwoTone\n              username={username}\n              name={name}\n              onClick={showConfirm(slug, fetchDeleteArticles, fetchArticles)}\n            />\n            <EditButton\n              username={username}\n              name={name}\n              type=\"primary\"\n              onClick={setAccess(name, authModalStateFailure, history, slug)}\n              props={this.props}\n            >\n              Edit\n            </EditButton>\n          </EditWrap>\n        </TitleWrap>\n        <Description location={location}>{description}</Description>\n        <Paragraph location={location}>{body}</Paragraph>\n        <Info>\n          <Author>\n            <CopyrightIcon />\n            {username}\n          </Author>\n          <Date>\n            <CalendarIcon />\n            {convertDate(createdAt)}\n          </Date>\n          <Tags>\n            <TagsIcon />\n            {tags}\n          </Tags>\n          <Likes>\n            <HeartIcon\n              onClick={this.setFavouriteArticle(name, authModalStateFailure)}\n              twoToneColor={favorited ? \"#eb2f96\" : \"\"}\n            />{\" \"}\n            {favoritesCount}\n          </Likes>\n        </Info>\n      </Wrap>\n    );\n  }\n}\n\nconst ConnectedAuthorization = connect(\n  mapStateToProps,\n  actionCreators\n)(Article);\n\nexport default withRouter(ConnectedAuthorization);\n\nconst Wrap = styled.article`\n  width: 700px;\n  padding-top: 10px;\n  border-bottom: 2px solid #aeb8c2;\n  background: rgba(175, 217, 255, 0.44);\n  box-shadow: 0 0 10px rgba(0, 0, 0, 0.5);\n`;\n\nconst TitleWrap = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  width: 700px;\n  border: 1px solid cornflowerblue;\n  background: rgba(88, 154, 255, 0.45);\n`;\n\nconst EditWrap = styled.div`\n  display: flex;\n  padding-right: 20px;\n  justify-content: space-between;\n  width: 180px;\n`;\n\nconst Title = styled(Link)`\n  color: rgba(5, 12, 22, 0.7);\n  font-weight: 600;\n  width: 530px;\n  padding: 5px 20px;\n  margin: 0;\n  word-wrap: break-word;\n`;\n\nconst Description = styled.div`\n  display: ${({ location }) => {\n    return location.pathname === \"/form-route/\" ? \"none\" : \"block\";\n  }};\n  color: rgba(5, 12, 22, 0.5);\n  width: 650px;\n  padding: 5px 20px;\n  margin: 0;\n  word-wrap: break-word;\n`;\n\nconst Paragraph = styled.p`\n  display: ${({ location }) => {\n    return location.pathname === \"/form-route/\" ? \"none\" : \"block\";\n  }};\n  width: 700px;\n  padding: 20px 20px;\n  margin: 0;\n  word-wrap: break-word;\n  background: rgba(230, 243, 251, 0.72);\n`;\n\nconst Info = styled.div`\n  display: flex;\n  justify-content: space-between;\n  width: 700px;\n  padding: 5px 10px;\n  background: rgba(88, 154, 255, 0.1);\n`;\n\nconst CopyrightIcon = styled(CopyrightCircleTwoTone)`\n  font-size: 18px;\n  margin-right: 5px;\n`;\n\nconst Likes = styled.span`\n  width: 40px;\n  height: 30px;\n`;\n\nconst HeartIcon = styled(HeartTwoTone)`\n  font-size: 18px;\n\n  &:active {\n    animation: transform 0.3s ease;\n  }\n\n  @keyframes transform {\n    from {\n      transform: scale(1);\n    }\n    50% {\n      transform: scale(1.3);\n    }\n    to {\n      transform: scale(1);\n    }\n  }\n`;\n\nconst CalendarIcon = styled(CalendarTwoTone)`\n  font-size: 18px;\n  margin-right: 5px;\n`;\n\nconst TagsIcon = styled(QuestionCircleTwoTone)`\n  font-size: 18px;\n  margin-right: 5px;\n`;\n\nconst Author = styled.span`\n  display: block;\n  width: 200px;\n  word-wrap: break-word;\n`;\n\nconst Date = styled.span`\n  display: block;\n  width: 200px;\n  word-wrap: break-word;\n`;\n\nconst Tags = styled.span`\n  display: block;\n  width: 200px;\n  word-wrap: break-word;\n`;\n\nconst StyledDeleteTwoTone = styled(DeleteTwoTone)`\n  display: ${({ name, username }) => (name === username ? \"flex\" : \"none\")};\n  align-items: center;\n  justify-content: center;\n  height: 30px;\n  width: 50px;\n  font-size: 20px;\n`;\n\nconst EditButton = styled(Button)`\n  display: ${({ name, username }) => (name === username ? \"block\" : \"none\")};\n  width: 100px;\n  height: 30px;\n  margin-right: 5px;\n  background-color: ${({ name, username }) =>\n    name === username ? \"#1890ff\" : \"inherit\"};\n`;\n","import { Button, Input, Form } from \"antd\";\nimport { Field, Formik } from \"formik\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\nimport styled from \"styled-components\";\nimport * as actions from \"../actions/actions\";\nimport { validationSchemaAuthForm } from \"../heplers/yupValidation\";\n\nconst mapStateToProps = (state) => {\n  const { authorization } = state;\n  const { errors = \"\" } = state.authorization;\n  const { emailOrPassword = \"\" } = errors;\n  return {\n    emailOrPassword,\n    authorization,\n  };\n};\n\nconst actionCreators = {\n  fetchAuthorization: actions.fetchAuthorization,\n  fetchAuthorizationSuccess: actions.fetchAuthorizationSuccess,\n};\n\nclass Authorization extends React.Component {\n  render() {\n    const { history, emailOrPassword, fetchAuthorization } = this.props;\n    return (\n      <Formik\n        initialValues={{\n          password: \"\",\n          email: \"\",\n        }}\n        validationSchema={validationSchemaAuthForm}\n        onSubmit={async ({ email, password }, { resetForm }) => {\n          await fetchAuthorization({ email, password });\n          const { authorization } = this.props;\n          if (authorization === \"finished\") {\n            resetForm();\n            history.push(\"/form-route/\");\n          }\n        }}\n      >\n        {({\n          values,\n          errors,\n          touched,\n          handleChange,\n          setFieldTouched,\n          handleSubmit,\n          isSubmitting,\n        }) => (\n          <Section>\n            <StyledForm onSubmit={handleSubmit}>\n              <Label>\n                Email<SymSpan>*</SymSpan>\n                <Form.Item\n                  hasFeedback\n                  validateStatus={\n                    touched.email && errors.email ? \"error\" : \"validate\"\n                  }\n                  help={touched.email && errors.email ? errors.email : null}\n                >\n                  <Field\n                    onPressEnter={handleSubmit}\n                    onChange={(event) => {\n                      setFieldTouched(\"email\");\n                      handleChange(event);\n                    }}\n                    value={values.email}\n                    name=\"email\"\n                    id=\"email\"\n                    type=\"email\"\n                    component={StyledInput}\n                  />\n                </Form.Item>\n              </Label>\n              <Label>\n                Password<SymSpan>*</SymSpan>\n                <Form.Item\n                  validateStatus={\n                    touched.password && errors.password ? \"error\" : \"validate\"\n                  }\n                  help={\n                    touched.password && errors.password ? errors.password : null\n                  }\n                >\n                  <Field\n                    onPressEnter={handleSubmit}\n                    onChange={(event) => {\n                      setFieldTouched(\"password\");\n                      handleChange(event);\n                    }}\n                    value={values.password}\n                    name=\"password\"\n                    visibilityToggle\n                    id=\"password\"\n                    type=\"password\"\n                    component={StyledInputPassword}\n                  />\n                </Form.Item>\n              </Label>\n              <StyledButton\n                type=\"primary\"\n                onClick={handleSubmit}\n                loading={isSubmitting}\n              >\n                Sign in\n              </StyledButton>\n              {emailOrPassword ? (\n                <div\n                  style={{ color: \"red\" }}\n                >{`Email or password ${emailOrPassword}`}</div>\n              ) : null}\n              <StyledLink to=\"/form-route/signup\">Sign up</StyledLink>\n\n              <StyledLink to=\"/form-route/\">Return to Main</StyledLink>\n            </StyledForm>\n          </Section>\n        )}\n      </Formik>\n    );\n  }\n}\n\nconst ConnectedAuthorization = connect(\n  mapStateToProps,\n  actionCreators\n)(Authorization);\n\nexport default ConnectedAuthorization;\n\nconst Section = styled.section`\n  padding: 30px;\n  width: 500px;\n  background-color: rgba(0, 33, 78, 0.12);\n  border-radius: 10px;\n  box-shadow: 0 0 5px 0 rgba(0, 0, 0, 0.5);\n`;\n\nconst StyledButton = styled(Button)`\n  margin-top: 10px;\n  margin-bottom: 5px;\n  width: 100px;\n`;\n\nconst StyledInput = styled(Input)`\n  width: 300px;\n  display: flex;\n  align-self: flex-start;\n`;\n\nconst StyledInputPassword = styled(Input.Password)`\n  width: 300px;\n  display: flex;\n  align-self: center;\n`;\n\nconst StyledForm = styled(Form)`\n  display: flex;\n  height: 220px;\n  max-width: 400px;\n  flex-flow: column;\n  align-items: center;\n  justify-content: space-around;\n`;\n\nconst StyledLink = styled(Link)`\n  text-decoration: none;\n  margin-top: 10px;\n`;\n\nconst SymSpan = styled.span`\n  font-size: 16px;\n  color: red;\n  margin-right: auto;\n`;\n\nconst Label = styled.label`\n  display: inline-flex;\n  width: 400px;\n  vertical-align: baseline;\n  justify-content: space-between;\n`;\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Link, withRouter } from \"react-router-dom\";\nimport styled from \"styled-components\";\nimport * as actions from \"../actions/actions\";\nimport { changeLog, changeName, setAccess } from \"../heplers/helpers\";\nimport Article from \"./Article\";\nimport { Pagination, Button, Spin } from \"antd\";\n\nconst mapStateToProps = (state) => {\n  const {\n    articles: { articles, articlesCount },\n    articlesFetchingState,\n  } = state;\n  return {\n    articles,\n    articlesCount,\n    articlesFetchingState,\n  };\n};\n\nconst actionCreators = {\n  fetchAuthorizationSuccess: actions.fetchAuthorizationSuccess,\n  fetchArticles: actions.fetchArticles,\n  authModalStateFailure: actions.authModalStateFailure,\n};\n\nclass Main extends Component {\n  handleLogOut = () => {\n    window.localStorage.removeItem(\"token\");\n    window.localStorage.removeItem(\"username\");\n  };\n\n  renderArticles = () => {\n    const { articles } = this.props;\n    return articles.map((article) => {\n      return <Article key={article.slug} article={article} />;\n    });\n  };\n  onChange = (event) => {\n    const { fetchArticles } = this.props;\n    const count = event + \"0\" - 10;\n    fetchArticles(count);\n  };\n\n  render() {\n    const {\n      articlesCount,\n      authModalStateFailure,\n      history,\n      articlesFetchingState,\n    } = this.props;\n    const name = localStorage.getItem(\"username\");\n    return (\n      <Container>\n        <StyledPagination\n          defaultCurrent={1}\n          pageSize={10}\n          showSizeChanger={false}\n          total={articlesCount}\n          onChange={this.onChange}\n          showTotal={(total, range) => `${range[1]} of ${total} items`}\n        />\n        <AuthMessage name={name}>\n          For editing, deleting and adding articles you need{\" \"}\n          <MessageLink to=\"/form-route/login\">{\" Log in\"}</MessageLink>\n        </AuthMessage>\n        <Wrapper>\n          <Name>{changeName()}</Name>\n          <StyledLink onClick={this.handleLogOut} to=\"/form-route/login\">\n            {changeLog()}\n          </StyledLink>\n          <StyledSpin\n            articlesFetchingState={articlesFetchingState}\n            size=\"large\"\n            tip=\"Loading...\"\n          />\n          {this.renderArticles()}\n        </Wrapper>\n        <AddButton\n          type=\"primary\"\n          onClick={setAccess(name, authModalStateFailure, history, null, \"add\")}\n        >\n          Add\n        </AddButton>\n      </Container>\n    );\n  }\n}\n\nconst ConnectedMain = connect(mapStateToProps, actionCreators)(Main);\n\nexport default withRouter(ConnectedMain);\n\nconst Container = styled.div`\n  display: flex;\n  flex-flow: column;\n  align-items: center;\n  width: 950px;\n\n  border: 1px solid cornflowerblue;\n  border-radius: 10px;\n  padding: 20px;\n  background-color: rgba(216, 236, 251, 0.53);\n  box-shadow: 0 0 5px 0 rgba(0, 0, 0, 0.5);\n`;\n\nconst Wrapper = styled.section`\n  display: flex;\n  flex-flow: column nowrap;\n  align-items: center;\n  min-height: 850px;\n  padding-bottom: 30px;\n`;\n\nconst StyledPagination = styled(Pagination)`\n  padding: 30px 0;\n`;\n\nconst StyledSpin = styled(Spin)`\n  margin-top: 150px;\n  display: ${({ articlesFetchingState }) =>\n    articlesFetchingState === \"success\" ? \"none\" : \"block\"};\n`;\n\nconst Name = styled.span`\n  position: fixed;\n  top: 20px;\n  right: 100px;\n  color: rgba(0, 13, 34, 0.72);\n`;\n\nconst AuthMessage = styled.div`\n  display: ${({ name }) => (name ? \"none\" : \"flex\")};\n  justify-content: center;\n  align-items: center;\n  height: 40px;\n  width: 700px;\n  background-color: rgba(233, 233, 113, 0.6);\n`;\n\nconst MessageLink = styled(Link)`\n  padding: 0 5px;\n`;\n\nconst StyledLink = styled(Link)`\n  padding: 0 5px;\n  text-decoration: none;\n  position: fixed;\n  top: 20px;\n  right: 30px;\n`;\n\nconst AddButton = styled(Button)`\n  width: 90px;\n  height: 30px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  margin-top: auto;\n`;\n","import { Button, Form, Input } from \"antd\";\nimport { Field, Formik } from \"formik\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\nimport styled from \"styled-components\";\nimport * as actions from \"../actions/actions\";\nimport { validationSchemaRegForm } from \"../heplers/yupValidation.js\";\n\nconst mapStateToProps = (state) => {\n  const { errors = \"\" } = state.registration;\n  const { email = \"\", password = \"\", username = \"\" } = errors;\n  const { registration } = state;\n  return {\n    email,\n    password,\n    username,\n    registration,\n  };\n};\nconst actionCreators = {\n  fetchRegistration: actions.fetchRegistration,\n};\n\nclass Registration extends React.Component {\n  render() {\n    const {\n      email,\n      password,\n      username,\n      history,\n      fetchRegistration,\n    } = this.props;\n    return (\n      <Formik\n        initialValues={{\n          password: \"\",\n          email: \"\",\n          name: \"\",\n        }}\n        validationSchema={validationSchemaRegForm}\n        onSubmit={async ({ name, email, password }, { resetForm }) => {\n          await fetchRegistration(name, email, password);\n          const { registration } = this.props;\n          if (registration === \"finished\") {\n            resetForm();\n            history.push(\"/form-route/login\");\n          }\n        }}\n      >\n        {({\n          values,\n          errors,\n          touched,\n          handleChange,\n          setFieldTouched,\n          handleSubmit,\n          isSubmitting,\n        }) => (\n          <Section>\n            <StyledForm onSubmit={handleSubmit}>\n              <Label>\n                Name<SymSpan>*</SymSpan>\n                <Form.Item\n                  hasFeedback\n                  validateStatus={\n                    touched.name && errors.name ? \"error\" : \"validate\"\n                  }\n                  help={touched.name && errors.name ? errors.name : null}\n                >\n                  <Field\n                    onPressEnter={handleSubmit}\n                    onChange={(event) => {\n                      setFieldTouched(\"name\");\n                      handleChange(event);\n                    }}\n                    value={values.name}\n                    name=\"name\"\n                    id=\"name\"\n                    type=\"text\"\n                    component={StyledInput}\n                  />\n                </Form.Item>\n              </Label>\n              {username ? (\n                <div\n                  style={{ marginLeft: \"auto\", color: \"red\" }}\n                >{`Name ${username}`}</div>\n              ) : null}\n              <Label>\n                Email<SymSpan>*</SymSpan>\n                <Form.Item\n                  hasFeedback\n                  validateStatus={\n                    touched.email && errors.email ? \"error\" : \"validate\"\n                  }\n                  help={touched.email && errors.email ? errors.email : null}\n                >\n                  <Field\n                    onPressEnter={handleSubmit}\n                    onChange={(event) => {\n                      setFieldTouched(\"email\");\n                      handleChange(event);\n                    }}\n                    value={values.email}\n                    name=\"email\"\n                    id=\"email\"\n                    type=\"email\"\n                    component={StyledInput}\n                  />\n                </Form.Item>\n              </Label>\n              {email ? (\n                <div\n                  style={{ marginLeft: \"auto\", color: \"red\" }}\n                >{`Email ${email}`}</div>\n              ) : null}\n              <Label>\n                Password<SymSpan>*</SymSpan>\n                <Form.Item\n                  validateStatus={\n                    touched.password && errors.password ? \"error\" : \"validate\"\n                  }\n                  help={\n                    touched.password && errors.password ? errors.password : null\n                  }\n                >\n                  <Field\n                    onPressEnter={handleSubmit}\n                    onChange={(event) => {\n                      setFieldTouched(\"password\");\n                      handleChange(event);\n                    }}\n                    value={values.password}\n                    name=\"password\"\n                    visibilityToggle\n                    id=\"password\"\n                    type=\"password\"\n                    component={StyledInputPassword}\n                  />\n                </Form.Item>\n              </Label>\n              {password ? (\n                <div\n                  style={{ marginLeft: \"auto\", color: \"red\" }}\n                >{`Password ${password}`}</div>\n              ) : null}\n              <Label>\n                Repeat Password<SymSpan>*</SymSpan>\n                <Form.Item\n                  validateStatus={\n                    touched.repeatPassword && errors.repeatPassword\n                      ? \"error\"\n                      : \"validate\"\n                  }\n                  help={\n                    touched.repeatPassword && errors.repeatPassword\n                      ? errors.repeatPassword\n                      : null\n                  }\n                >\n                  <Field\n                    onPressEnter={handleSubmit}\n                    onChange={(event) => {\n                      setFieldTouched(\"repeatPassword\");\n                      handleChange(event);\n                    }}\n                    value={values.repeatPassword}\n                    name=\"repeatPassword\"\n                    visibilityToggle\n                    id=\"repeatPassword\"\n                    type=\"password\"\n                    component={StyledInputPassword}\n                  />\n                </Form.Item>\n              </Label>\n              <StyledButton\n                type=\"primary\"\n                onClick={handleSubmit}\n                loading={isSubmitting}\n              >\n                Sign up\n              </StyledButton>\n              <StyledLink to=\"/form-route/login\">Sign in</StyledLink>\n            </StyledForm>\n          </Section>\n        )}\n      </Formik>\n    );\n  }\n}\n\nconst ConnectedRegistration = connect(\n  mapStateToProps,\n  actionCreators\n)(Registration);\n\nexport default ConnectedRegistration;\n\nconst Section = styled.section`\n  padding: 30px;\n  width: 550px;\n  background-color: rgba(0, 33, 78, 0.12);\n  border-radius: 10px;\n  box-shadow: 0 0 5px 0 rgba(0, 0, 0, 0.5);\n`;\n\nconst StyledButton = styled(Button)`\n  margin-top: 10px;\n`;\n\nconst StyledInput = styled(Input)`\n  width: 300px;\n  display: flex;\n  align-self: flex-start;\n`;\n\nconst StyledInputPassword = styled(Input.Password)`\n  width: 300px;\n  display: flex;\n  align-self: center;\n`;\n\nconst StyledForm = styled(Form)`\n  display: flex;\n  height: 300px;\n  max-width: 550px;\n  flex-flow: column;\n  align-items: center;\n  justify-content: space-between;\n`;\n\nconst StyledLink = styled(Link)`\n  text-decoration: none;\n  margin-top: 20px;\n`;\n\nconst SymSpan = styled.span`\n  font-size: 16px;\n  color: red;\n  margin-right: auto;\n  margin-left: 2px;\n`;\n\nconst Label = styled.label`\n  display: flex;\n  width: 450px;\n  justify-content: space-between;\n`;\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { Modal } from \"antd\";\nimport { withRouter, Link, Route, Switch } from \"react-router-dom\";\nimport { handleOk, onCancel, showModal } from \"../heplers/helpers.js\";\nimport AddEditArticle from \"./AddEditArticle.jsx\";\nimport Article from \"./Article\";\nimport Authorization from \"./Authorization\";\nimport Main from \"./Main\";\nimport Registration from \"./Registration\";\nimport * as actions from \"../actions/actions\";\n\nconst mapStateToProps = (state) => {\n  const {\n    articles: { articles },\n    authModalState,\n  } = state;\n  return {\n    articles,\n    authModalState,\n  };\n};\n\nconst actionCreators = {\n  fetchArticles: actions.fetchArticles,\n  authModalStateSuccess: actions.authModalStateSuccess,\n};\n\nclass App extends React.Component {\n  componentDidMount() {\n    const { fetchArticles } = this.props;\n    fetchArticles();\n  }\n\n  render() {\n    const {\n      authModalStateSuccess,\n      articles,\n      history,\n      authModalState,\n    } = this.props;\n    return (\n      <>\n        <Modal\n          title=\"Authorization message\"\n          visible={showModal(null, authModalState)}\n          onOk={handleOk(history, authModalStateSuccess)}\n          onCancel={onCancel(authModalStateSuccess)}\n        >\n          You need{\" \"}\n          <Link\n            onClick={onCancel(authModalStateSuccess)}\n            to=\"/form-route/login\"\n          >\n            Log in\n          </Link>\n        </Modal>\n        <Switch>\n          <Route exact path=\"/form-route/\" component={Main} />\n          <Route exact path=\"/form-route/login\" component={Authorization} />\n          <Route exact path=\"/form-route/signup\" component={Registration} />\n          <Route exact path=\"/form-route/add\" component={AddEditArticle} />\n          <Route\n            exact\n            path=\"/form-route/articles/:slug\"\n            render={({ match }) => (\n              <Article\n                article={articles.find(\n                  (article) => article.slug === match.params.slug\n                )}\n              />\n            )}\n          />\n          <Route\n            exact\n            path=\"/form-route/:slug/edit\"\n            render={({ match }) => (\n              <AddEditArticle\n                articles={articles}\n                article={articles.find(\n                  (article) => article.slug === match.params.slug\n                )}\n              />\n            )}\n          />\n        </Switch>\n      </>\n    );\n  }\n}\n\nconst connectApp = connect(mapStateToProps, actionCreators)(App);\n\nexport default withRouter(connectApp);\n","import { combineReducers } from \"redux\";\nimport { handleActions } from \"redux-actions\";\nimport * as actions from \"../actions/actions\";\n\nconst articlesFetchingState = handleActions(\n  {\n    [actions.fetchArticlesSuccess]: () => {\n      return \"success\";\n    },\n  },\n  null\n);\n\nconst authModalState = handleActions(\n  {\n    [actions.authModalStateSuccess]: () => {\n      return \"success\";\n    },\n    [actions.authModalStateFailure]: () => {\n      return \"failed\";\n    },\n  },\n  null\n);\n\nconst articlesFavouriteFetchingState = handleActions(\n  {\n    [actions.fetchFavouriteArticleFailure]: () => {\n      return \"failed\";\n    },\n  },\n  null\n);\n\nconst authorization = handleActions(\n  {\n    [actions.fetchAuthorizationSuccess]: () => {\n      return \"finished\";\n    },\n    [actions.fetchAuthorizationFailure]: (\n      state,\n      { payload: { emailOrPassword } }\n    ) => {\n      return {\n        ...state,\n        errors: {\n          emailOrPassword,\n        },\n      };\n    },\n  },\n  {\n    errors: {\n      emailOrPassword: null,\n    },\n  }\n);\n\nconst registration = handleActions(\n  {\n    [actions.fetchRegistrationSuccess]: () => {\n      return \"finished\";\n    },\n    [actions.fetchRegistrationFailure]: (\n      state,\n      { payload: { email, password, username } }\n    ) => {\n      return {\n        ...state,\n        errors: {\n          email,\n          password,\n          username,\n        },\n      };\n    },\n  },\n  {\n    errors: {\n      email: null,\n      password: null,\n      username: null,\n    },\n  }\n);\n\nconst addEditArticleState = handleActions(\n  {\n    [actions.fetchAddEditArticleSuccess]: () => {\n      return \"success\";\n    },\n    [actions.fetchAddEditArticleFailure]: () => {\n      return \"authError\";\n    },\n  },\n  null\n);\n\nconst articles = handleActions(\n  {\n    [actions.fetchArticlesSuccess]: (\n      state,\n      { payload: { articles, articlesCount } }\n    ) => {\n      return { ...state, articles, articlesCount };\n    },\n    [actions.fetchFavouriteArticleSuccess]: (state, { payload: { slug } }) => {\n      const changedArticles = state.articles.map((article) => {\n        if (article.slug === slug) {\n          return article.favorited\n            ? {\n                ...article,\n                favoritesCount: article.favoritesCount - 1,\n                favorited: !article.favorited,\n              }\n            : {\n                ...article,\n                favoritesCount: article.favoritesCount + 1,\n                favorited: !article.favorited,\n              };\n        }\n        return article;\n      });\n      return { ...state, articles: changedArticles };\n    },\n    [actions.fetchDeleteArticleSuccess]: (state, { payload: { slug } }) => {\n      const articles = state.articles.filter((article) => {\n        return article.slug !== slug;\n      });\n      return { ...state, articles };\n    },\n  },\n  {\n    articlesCount: 10,\n    articles: [],\n  }\n);\n\nexport default combineReducers({\n  addEditArticleState,\n  articlesFetchingState,\n  articlesFavouriteFetchingState,\n  authorization,\n  authModalState,\n  registration,\n  articles,\n});\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"antd/dist/antd.css\";\nimport { Provider } from \"react-redux\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport thunk from \"redux-thunk\";\nimport { createStore, applyMiddleware, compose } from \"redux\";\nimport { Normalize } from \"styled-normalize\";\nimport { createGlobalStyle } from \"styled-components\";\nimport App from \"./components/App\";\nimport reducers from \"./reducers/reducers\";\n\nconst GlobalStyle = createGlobalStyle`\n\t@font-face {\n\tfont-family: 'Open Sans';\n  font-style: normal;\n  font-weight: 400;\n  src: local('Open Sans Regular'), local('OpenSans-Regular'), url(https://fonts.gstatic.com/s/opensans/v17/mem8YaGs126MiZpBA-UFWJ0bbck.woff2) format('woff2');\n \t}\n \t@font-face {\n \tfont-family: 'Open Sans';\n  font-style: normal;\n  font-weight: 600;\n  src: local('Open Sans SemiBold'), local('OpenSans-SemiBold'), url(https://fonts.gstatic.com/s/opensans/v17/mem5YaGs126MiZpBA-UNirkOVuhpOqc.woff2) format('woff2');\n \t}\n\n*{\n  box-sizing: border-box;\n}\n  body {\n    font-family: \"Open Sans\";\n    font-weight: 400;\n    width: 100%;\n    padding: 50px;\n    background-color: rgba(88,154,255,0.41);\n    font-size: 16px;\n    display:flex;\n    justify-content:center;\n  }\n`;\n\nconst ext = window.__REDUX_DEVTOOLS_EXTENSION__;\nconst devtoolMiddleware = ext && ext();\n\nconst store = createStore(\n  reducers,\n  compose(applyMiddleware(thunk), devtoolMiddleware)\n);\n\nReactDOM.render(\n  <Router>\n    <Provider store={store}>\n      <Normalize />\n      <GlobalStyle />\n      <App />\n    </Provider>\n  </Router>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}